apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: qcs-gitops-environments
  namespace: argocd
spec:
  syncPolicy:
    preserveResourcesOnDeletion: true
  goTemplate: true
  generators:
    - git:
        repoURL: https://github.com/qlik-trial/gitops-environments
        revision: main
        requeueAfterSeconds: 90
        files:
          - path: components/bonjour-world/qlik-cloud-services-int-env/conf.yaml
  template:
    metadata:
      name: "{{index .path.segments 1}}"
      annotations:
        notifications.argoproj.io/subscribe.on-deployed-version.app-deployed-webhook: ""
        notifications.argoproj.io/subscribe.on-deployed-revision.app-deployed-webhook: ""
        notifications.argoproj.io/subscribe.on-sync-failed.app-deployed-webhook: ""
        notifications.argoproj.io/subscribe.on-health-degraded.app-deployed-webhook: ""
        notifications.argoproj.io/subscribe.on-template-failed.app-deployed-webhook: ""
        notifications.argoproj.io/subscribe.on-template-failed-slack.slack: '{{dig "slackNotifyChannel" "argocd-qcs-int-monitoring" .}}'
        notifications.argoproj.io/subscribe.on-deployed-version.slack: '{{dig "slackNotifyChannel" "argocd-qcs-int-monitoring" .}}'
        notifications.argoproj.io/subscribe.on-deployed-revision.slack: '{{dig "slackNotifyChannel" "argocd-qcs-int-monitoring" .}}'
        notifications.argoproj.io/subscribe.on-created.slack: '{{dig "slackNotifyChannel" "argocd-qcs-int-monitoring" .}}'
        notifications.argoproj.io/subscribe.on-deleted.slack: '{{dig "slackNotifyChannel" "argocd-qcs-int-monitoring" .}}'
        notifications.argoproj.io/subscribe.on-health-degraded.slack: '{{dig "slackNotifyChannel" "argocd-qcs-int-monitoring" .}}'
        notifications.argoproj.io/subscribe.on-sync-failed.slack: '{{dig "slackNotifyChannel" "argocd-qcs-int-monitoring" .}}'
        notifications.argoproj.io/subscribe.on-sync-status-unknown.slack: '{{dig "slackNotifyChannel" "argocd-qcs-int-monitoring" .}}'
        pipeline.qlik.com/version: "{{.version}}"
        pipeline.qlik.com/version-override: "{{.versionOverride}}"
        pipeline.qlik.com/heo-revision: "{{.heoRevision}}"
        pipeline.qlik.com/heo-revision-override: "{{.heoRevisionOverride}}"
        pipeline.qlik.com/environment: "qlik-cloud-services-int-env"
      labels:
        app.kubernetes.io/version: "{{if .versionOverride}}{{.versionOverride}}{{else}}{{.version}}{{end}}"
        app.kubernetes.io/heo-revision: "{{if .heoRevisionOverride}}{{.heoRevisionOverride}}{{else}}{{.heoRevision}}{{end}}"
    spec:
      project: qcs
      source:
        repoURL: https://github.com/qlik-trial/helm-environment-overrides
        targetRevision: "{{if .heoRevisionOverride}}{{.heoRevisionOverride}}{{else}}{{.heoRevision}}{{end}}"
        path: "{{.heoRoot}}/{{index .path.segments 1}}"
        plugin:
          name: gomplate-helm-v1.0
          env:
            - name: ACCOUNT
              value: qcs-stage
            - name: SERVICE_NAME
              value: "{{index .path.segments 1}}"
            - name: RELEASE_NAME
              value: "{{index .path.segments 1}}"
            - name: VERSION
              value: "{{.version}}"
            - name: VERSION_OVERRIDE
              value: "{{.versionOverride}}"
            - name: HEO_REVISION
              value: "{{.heoRevision}}"
            - name: HEO_REVISION_OVERRIDE
              value: "{{.heoRevisionOverride}}"
            - name: ENVIRONMENT
              value: "qcs-int"
            - name: PROVIDER
              value: "aws"
            - name: SOLACE_DOMAIN_NAME
              value: qcs-int-eu-central-1-messaging.messaging.solace.cloud
            - name: REGION
              value: "eu-central-1"
            - name: AWS_REGION
              value: "eu-central-1"
            - name: CONTAINER_REGISTRY_URL
              value: "ghcr.io/qlik-trial"
            - name: HELM_CHART_REGISTRY_URL
              value: "ghcr.io/qlik-trial"
            - name: HELM_CHART_REGISTRY_URL_OVERRIDE
              value: '{{dig "helmChartRegistryUrlOverride" "" .}}'
            - name: HELM_TEMPLATE_OPTIONS
              value: "--set imagePullSecrets={} --set imagePullSecrets[0].name=artifactory-docker-secret --set image.pullSecrets={} --set image.pullSecrets[0].name=artifactory-docker-secret --set redis.global.imagePullSecrets[0]=artifactory-docker-secret --set redis-cluster.global.imagePullSecrets[0]=artifactory-docker-secret"
            - name: HELM_TEMPLATE_OPTIONS_OVERRIDE
              value: '{{dig "helmTemplateOptionsOverride" "" .}}'
            - name: ACCOUNT_ID
              value: "186147167493"
            - name: PROVIDER
              value: eks
            - name: SUBDOMAIN
              value: int
            - name: FS_ID
              value: fs-0c5ecfeaec786a1fa
            - name: GOMPLATE_DATASOURCES
              value: "{{.gomplateDatasources}}"
            - name: REGIONLESS_VAULT
              value: '{{dig "regionlessVault" "" .}}'
            - name: VAULT_PATH_OVERRIDE
              value: '{{dig "vaultPathOverride" "" .}}'
            - name: ENABLE_ARGO_HOOK_DELETE_REDIS
              value: "{{.enableArgoHookDeleteRedis}}"
            - name: ENABLE_ARGO_HOOK_DELETE_REDIS_FORCE
              value: "{{.enableArgoHookDeleteRedisForce}}"
            - name: CUSTOM_HOOK
              value: '{{dig "customHook" "" .}}'
      ignoreDifferences:
        - group: apps
          kind: Deployment
          jqPathExpressions:
            - .spec.template.spec.containers[].image
            - .spec.template.spec.initContainers[].image
            - .spec.replicas
        - group: apps
          kind: StatefulSet
          jqPathExpressions:
            - .spec.template.spec.containers[].image
            - .spec.template.spec.initContainers[].image
            - .spec.replicas
        - group: apps
          kind: DaemonSet
          jqPathExpressions:
            - .spec.template.spec.containers[].image
            - .spec.template.spec.initContainers[].image
        - group: batch
          kind: CronJob
          jqPathExpressions:
            - .spec.jobTemplate.spec.template.spec.containers[].image
            - .spec.jobTemplate.spec.template.spec.initContainers[].image
        - group: autoscaling
          kind: HorizontalPodAutoscaler
          jqPathExpressions:
            - .spec.metrics[].object.target.value
      destination:
        server: http://cluster-eks-dev:8001
        namespace: "{{.namespace}}"
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        automated:
          prune: true
          selfHeal: false
